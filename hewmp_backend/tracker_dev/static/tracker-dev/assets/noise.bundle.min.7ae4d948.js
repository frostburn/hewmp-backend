class t extends AudioWorkletProcessor{constructor(t){super(t),this.tOnset=0,this.tableDelta=.02,this.tables={},this.messages=[],this.port.onmessage=this.onMessage.bind(this)}onMessage(t){const e=t.data.when;void 0===e?this.applyMessage(t):(this.messages.push([e,t]),this.messages.sort(((t,e)=>t[0]-e[0])))}triggerMessages(t){for(;this.messages.length&&this.messages[0][0]<=t;){const[t,e]=this.messages.shift();this.applyMessage(e)}}applyMessage(t){const e=t.data;return"onset"===e.type?(this.tOnset=0,!0):"cancel"===e.type?(this.messages=[],!0):"tableDelta"===e.type?(this.tableDelta=e.value,!0):"tables"===e.type?(this.tables=e.value,!0):"table"===e.type&&(this.tables[e.subtype]=e.value,!0)}process(t,e,s){const i=e[0];this.processMono(i[0],s);for(let t=1;t<i.length;++t)for(let e=0;e<i[0].length;++e)i[t][e]=i[0][e];return!0}getDt(){return 1/sampleRate}getLowpass(t){return.5**(t/.001)}}class e{constructor(t){this.seed(t)}reset(){this.x=123456789,this.y=234567891,this.z=345678912,this.w=456789123,this.c=0}static get MAX_VALUE(){return 2147483647}static unserialize(t){const e=JSON.parse(t),s=new this;return s.x=e.x,s.y=e.y,s.z=e.z,s.w=e.w,s.c=e.c,s}serialize(){return JSON.stringify(this)}scramble(){this.x=4294967295*Math.random()&4294967295,this.y=4294967295*Math.random()&4294967295,this.z=4294967295*Math.random()&4294967295,this.w=4294967295*Math.random()&4294967295,this.c=Math.random()<.5&1}seed(t){this.reset(),void 0!==t&&(t=1287649287*t+777777&4294967295,this.x^=t,t=t*t&4294967295,this.y^=t,t=t*t&4294967295,this.z^=t)}step(){this.y^=this.y<<5,this.y^=this.y>>7,this.y^=this.y<<22;const t=this.z+this.w+this.c&4294967295;return this.z=this.w,this.c=t<0&1,this.w=2147483647&t,this.x=this.x+1411392427&4294967295,this.x+this.y+this.w&2147483647}step01(){return 4.656612875245797e-10*this.step()}normal(){return 2.3283064376228985e-10*(this.step()-this.step()+this.step()-this.step()+this.step()-this.step())}}function s(t,e){const s=e.loopStart,i=e.data;return t<s?i[t]:(t-=s,i[s+(t%=i.length-s)])}function i(t,e){let i=Math.floor(t);if(e.linear){const h=t-i,a=s(i,e);return a+h*(s(i+1,e)-a)}return s(i,e)}const h=new e;function a(){return 2*h.step01()-1}function n(){return 2*Math.random()-1}function r(){return h.step01()-h.step01()}function l(){return h.normal()}h.scramble();class o{constructor(){this.generator=new e,this.generator.scramble(),this.last=null}step(){if(null===this.last)return this.last=2*this.generator.step01()-1,this.last;const t=-this.last;return this.last=null,t}}class d{constructor(t,s){this.length=t,this.seed=s,this.generator=new e(s),this.index=0}reset(){this.generator.seed(this.seed),this.index=0}step(){return this.index>=this.length&&this.reset(),this.index++,2*this.generator.step01()-1}}class p{constructor(t){this.depth=t,this.generator=new e,this.generator.scramble(),this.value=this.generator.step(),this.remaining=31}set depth(t){this._depth=t,this.mask=(1<<t)-1}get depth(){return this._depth}step(){const t=this.value&this.mask;return this.remaining-=this.depth,this.remaining<this.depth?(this.value=this.generator.step(),this.remaining=31):this.value>>=this.depth,t/this.mask*2-1}}class u{constructor(t=4){this.x=Math.random(),this.r=t}step(){this.x=this.r*this.x*(1-this.x),(isNaN(this.x)||this.x<=0||this.x>=1)&&(this.x=Math.random());const t=(this.r-3.55)/(4-3.55),e=.888+t*(1-.888),s=.354-.354*t+t*(1-t)*.097;return 2*(this.x-s)/(e-s)-1}}registerProcessor("noise",class extends t{static get parameterDescriptors(){return[{name:"nat",defaultValue:0},{name:"timbre",defaultValue:0},{name:"jitter",defaultValue:0}]}constructor(){super(),this.phase=0,this.amplitude=1,this.model=n,this.modelType="rand",this.jitterModel=n,this.finite=new d,this.balanced=new o,this.bit=new p,this.logistic=new u,this.alternating=1,this.jitterFinite=new d,this.jitterBalanced=new o,this.jitterBit=new p,this.jitterLogistic=new u,this.jitterAlternating=1,this.diffs=[],this.linear=!1,this.y0=this.model(),this.y1=this.model(),this.jitterType="pitch",this.speed=1,this.underSampling=1,this.holdIndex=0,this.holdValue=this.y1,this.tables={amplitude:{linear:!1,loopStart:0,data:[1]},nat:{linear:!1,loopStart:0,data:[0]},timbre:{linear:!1,loopStart:0,data:[0]},bias:{linear:!1,loopStart:0,data:[0]}},this.messages=[],this.port.onmessage=this.onMessage.bind(this)}applyMessage(t){const e=t.data;if("onset"===e.type&&(this.finite.reset(),this.alternating=1,this.jitterFinite.reset(),this.jitterAlternating=1),!super.applyMessage(t))if("model"===e.type)"uniform"===e.value?this.model=a:"triangular"===e.value?this.model=r:"normal"===e.value?this.model=l:"balanced"===e.value?this.model=this.balanced.step.bind(this.balanced):"finite"===e.value?this.model=this.finite.step.bind(this.finite):"bit"===e.value?this.model=this.bit.step.bind(this.bit):"logistic"===e.value?this.model=this.logistic.step.bind(this.logistic):"alternating"===e.value?this.model=()=>(this.alternating=-this.alternating,this.alternating):this.model=n,this.modelType=e.value;else if("jitterModel"===e.type)"uniform"===e.value?this.jitterModel=a:"triangular"===e.value?this.jitterModel=r:"normal"===e.value?this.jitterModel=l:"balanced"===e.value?this.jitterModel=this.jitterBalanced.step.bind(this.jitterBalanced):"finite"===e.value?this.jitterModel=this.jitterFinite.step.bind(this.jitterFinite):"bit"===e.value?this.jitterModel=this.jitterBit.step.bind(this.jitterBit):"logistic"===e.value?this.jitterModel=this.jitterLogistic.step.bind(this.jitterLogistic):"alternating"===e.value?this.jitterModel=()=>(this.jitterAlternating=-this.jitterAlternating,this.jitterAlternating):this.jitterModel=n;else if("jitterType"===e.type)this.jitterType=e.value;else if("finiteLength"===e.type)this.finite.length=e.value;else if("finiteSeed"===e.type)this.finite.seed=e.value;else if("bitDepth"===e.type)this.bit.depth=e.value;else if("jitterFiniteLength"===e.type)this.jitterFinite.length=e.value;else if("jitterFiniteSeed"===e.type)this.jitterFinite.seed=e.value;else if("jitterBitDepth"===e.type)this.jitterBit.depth=e.value;else if("jitterLogisticR"===e.type)this.jitterLogistic.r=e.value;else if("diffStages"===e.type){this.diffs=Array(e.value).fill(0);for(let t=0;t<e.value;++t)this.generateValue()}else if("linear"===e.type)this.linear=e.value;else{if("underSampling"!==e.type)throw`Unrecognized message ${e.type}`;this.underSampling=e.value}}generateValue(t){let e,s=this.model();"logistic"===this.modelType?this.logistic.r=3.55+t*(4-3.55):(t=16*t+1e-6,s=Math.sinh(s*t)/Math.sinh(t));for(let t=0;t<this.diffs.length;++t)e=this.diffs[t],this.diffs[t]=s,s-=e;this.y0=this.y1,this.y1=s/(1<<this.diffs.length)}processMono(t,e){let s=currentTime;const h=e.nat,a=e.jitter,n=e.timbre,r=this.getDt()*this.underSampling,l=this.getLowpass(r),o=1-l;for(let e=0;e<t.length;e++){if(0===this.holdIndex){this.triggerMessages(s);const d=this.tOnset/this.tableDelta,p=Math.exp(h[Math.min(h.length-1,e)]+i(d,this.tables.nat)),u=i(d,this.tables.amplitude),g=this.amplitude=this.amplitude*l+u*o,c=this.speed*p*r;let m=this.y1;if(this.linear&&(m=this.y0+(this.y1-this.y0)*this.phase),this.holdValue=m*g,t[e]=this.holdValue,s+=r,this.tOnset+=r,this.phase+=c,this.phase>1){const t=(this.phase-1)/this.speed,s=n[Math.min(n.length-1,e)]+i(d,this.tables.timbre);this.generateValue(s);const h=a[Math.min(a.length-1,e)]+i(d,this.tables.bias);this.speed=h*this.jitterModel(),"pulseWidth"===this.jitterType?this.speed=1/(1+Math.max(-.99,this.speed)):this.speed=Math.exp(this.speed),this.phase=t*this.speed%1}}else t[e]=this.holdValue;this.holdIndex=(this.holdIndex+1)%this.underSampling}}});
